stages:
    - build
    - test
    - deploy

variables:
  PORTAINER_HOST: '18.181.145.137:9000'
  CONTAINER_NAME: 'online-course-platform'
  EC2_IP: ec2-18-181-145-137.ap-northeast-1.compute.amazonaws.com



# docker-build:
#   image: docker:cli
#   stage: build
#   services:
#     - docker:dind
#   variables:
#     DOCKER_IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
#   before_script:
#     - echo "before_script"
#   # All branches are tagged with $DOCKER_IMAGE_NAME (defaults to commit ref slug)
#   # Default branch is also tagged with `latest`
#   script:
#     - |
#       if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
#         docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#         docker build --pull -t "$DOCKER_IMAGE_NAME" .
#         docker tag "$DOCKER_IMAGE_NAME" "$CI_REGISTRY_IMAGE:latest"
#         docker push "$CI_REGISTRY_IMAGE:latest"
#       fi
#   # Run this job in a branch where a Dockerfile exists
#   rules:
#     - if: $CI_COMMIT_BRANCH
#       exists:
#         - Dockerfile


deploy-portainer:
  stage: deploy
  image: alpine
  before_script: 
    - apk add openssh-client
    - eval $(ssh-agent -s)
    - echo "$EC2_PEM" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh -o StrictHostKeyChecking=no ec2-user@$EC2_IP "docker login registry.gitlab.com -u he141142  -p \"$GITLAB_TOKEN\""
  script:
    - apk add --no-cache curl jq
    # - >
    #   curl -s -X POST "http://$PORTAINER_HOST/api/auth"     -H "Content-Type: application/json"     -d "{\"username\": \"$PORTAINER_USERNAME\", \"password\": \"$PORTAINER_PASSWORD\"}" | jq -r '.jwt' > portainer_jwt
    # - >
    #   curl -s -X POST "http://$PORTAINER_HOST/api/endpoints/$PORTAINER_ENDPOINT_ID/docker/containers/create?name=$CONTAINER_NAME" \
    #   -H "Authorization: Bearer $(cat portainer_jwt)" \
    #   -H "Content-Type: application/json" \
    #   -d '{
    #         "Image": "$CI_REGISTRY_IMAGE:latest",
    #         "ExposedPorts": {
    #           "80/tcp": {}
    #         },
    #         "HostConfig": {
    #           "PortBindings": {
    #             "80/tcp": [
    #               {
    #                 "HostPort": "80"
    #               }
    #             ]
    #           }
    #         }
    #       }'
      
    # - >
    #   curl -s -X POST "http://$PORTAINER_HOST/api/endpoints/$PORTAINER_ENDPOINT_ID/docker/containers/$CONTAINER_NAME/start" \
    #   -H "Authorization: Bearer $(cat portainer_jwt)"
    - ssh -o StrictHostKeyChecking=no ec2-user@$EC2_IP "docker pull registry.gitlab.com/drake-online-course-platform/drake-eda-base:latest"
    - ssh -o StrictHostKeyChecking=no ec2-user@$EC2_IP "docker run -d registry.gitlab.com/drake-online-course-platform/drake-eda-base:latest -p 8888:8888 --name eda-base"