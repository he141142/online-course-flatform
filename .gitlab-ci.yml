stages:
    - build
    - test
    - deploy

variables:
  PORTAINER_HOST: '13.114.66.93:9000'
  CONTAINER_NAME: 'online-course-platform'



docker-build:
  image: docker:cli
  stage: build
  services:
    - docker:dind
  variables:
    DOCKER_IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  before_script:
    - echo "before_script"
  # All branches are tagged with $DOCKER_IMAGE_NAME (defaults to commit ref slug)
  # Default branch is also tagged with `latest`
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
        docker build --pull -t "$DOCKER_IMAGE_NAME" .
        docker tag "$DOCKER_IMAGE_NAME" "$CI_REGISTRY_IMAGE:latest"
        docker push "$CI_REGISTRY_IMAGE:latest"
      fi
  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile


deploy-portainer:
  stage: deploy
  image: alpine
  script:
    - echo "$EC2_PEM" | tr -d '\r' > /tmp/deploy.pem
    - chmod 600 /tmp/deploy.pem
    - ssh -i /tmp/deploy.pem ec2-user@ec2-18-181-145-137.ap-northeast-1.compute.amazonaws.com -y
    - apk add --no-cache curl jq
#    - >
#      curl -s -X POST "http://$PORTAINER_HOST/api/auth" \
#      -H "Content-Type: application/json" \
#      -d '{"username": "$PORTAINER_USERNAME", "password": "$PORTAINER_PASSWORD"}' \
#      | jq -r '.jwt' > portainer_jwt
#    - >
#      curl -s -X POST "http://$PORTAINER_HOST/api/endpoints/$PORTAINER_ENDPOINT_ID/docker/containers/create?name=$CONTAINER_NAME" \
#      -H "Authorization: Bearer $(cat portainer_jwt)" \
#      -H "Content-Type: application/json" \
#      -d '{
#            "Image": "$CI_REGISTRY_IMAGE:latest",
#            "ExposedPorts": {
#              "80/tcp": {}
#            },
#            "HostConfig": {
#              "PortBindings": {
#                "80/tcp": [
#                  {
#                    "HostPort": "80"
#                  }
#                ]
#              }
#            }
#          }'
#
#    - >
#      curl -s -X POST "http://$PORTAINER_HOST/api/endpoints/$PORTAINER_ENDPOINT_ID/docker/containers/$CONTAINER_NAME/start" \
#      -H "Authorization: Bearer $(cat portainer_jwt)"
    - echo "Deployed $CONTAINER_NAME"
    -